// Code generated by MockGen. DO NOT EDIT.
// Source: gateways.go
//
// Generated by this command:
//
//	mockgen -source=gateways.go -destination=gateways_test.go -package=categories_test
//

// Package categories_test is a generated GoMock package.
package categories_test

import (
	context "context"
	categories "curso-go/internal/categories"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCreateCategoryGateway is a mock of CreateCategoryGateway interface.
type MockCreateCategoryGateway struct {
	ctrl     *gomock.Controller
	recorder *MockCreateCategoryGatewayMockRecorder
	isgomock struct{}
}

// MockCreateCategoryGatewayMockRecorder is the mock recorder for MockCreateCategoryGateway.
type MockCreateCategoryGatewayMockRecorder struct {
	mock *MockCreateCategoryGateway
}

// NewMockCreateCategoryGateway creates a new mock instance.
func NewMockCreateCategoryGateway(ctrl *gomock.Controller) *MockCreateCategoryGateway {
	mock := &MockCreateCategoryGateway{ctrl: ctrl}
	mock.recorder = &MockCreateCategoryGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateCategoryGateway) EXPECT() *MockCreateCategoryGatewayMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreateCategoryGateway) Create(ctx context.Context, category *categories.Category) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, category)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCreateCategoryGatewayMockRecorder) Create(ctx, category any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateCategoryGateway)(nil).Create), ctx, category)
}
